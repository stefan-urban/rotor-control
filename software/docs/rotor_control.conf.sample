#
# Logging level
#
#  0 = LOG_EMERG
#  1 = LOG_ALERT
#  2 = LOG_CRIT
#  3 = LOG_ERR
#  4 = LOG_WARNING
#  5 = LOG_NOTICE
#  6 = LOG_INFO
#  7 = LOG_DEBUG
#
log_level = 6;


#
# Rotor Simulation
#
#  true  = simulation on
#  false = simulation off
#
simulation=true;


#
# List of pseudoterminals which will be created
#
pseudoterminals =
(
	"/dev/rotor_control",
	"/dev/rotor_control2"
)


#
# Do not create pseudoterminal, listen to existing terminal
#
#listen_console_path="/dev/ttyUSB4"


#
# Interpolation table for position sensor
#   => Yaesu G-2800DXC
#
#  Array of (millivolt, degree) values, values must be in float format
#
rotor_yaesu_g2800dxc_interpolation_table =
(
        (0.0, 0.0),
        (1299.0, 0.0),
        (1489.0, 30.0),
        (1688.0, 60.0),
        (1886.0, 90.0),
        (2077.0, 120.0),
        (2290.0, 150.0),
        (2402.0, 180.0),
        (2700.0, 210.0),
        (2905.0, 240.0),
        (3725.0, 360.0), # Exrapoliert!
        (5000.0, 360.0)
);


#
# Interpolation table for position sensor
#   => Creative Design ERC5-A
#
#  Array of (millivolt, degree) values, values must be in float format
#
rotor_create_erc5a_interpolation_table =
(
        (0.0, 0.0),
        (600.0, 0.0), # Extrapoliert!
        (638.0, 20.0),
        (878.0, 30.0),
        (1126.0, 40.0),
        (1392.0, 50.0),
        (1665.0, 60.0),
        (1800.0, 90.0), # Extrapoliert!
        (5000.0, 360.0)
);


#
# Interpolation table for position sensor
#   => Yaesu G-2800DXC
#
#  Array of (millivolt, degree) values, values must be in float format
#
rotor_debug_elevation_interpolation_table =
(
        (0.0, 0.0),
        (1000.0, 90.0)
);

rotor_debug_azimuth_interpolation_table =
(
        (0.0, 0.0),
        (5000.0, 360.0)
);

